jobs:
  buildFree:
    working_directory: ~/code
    docker:
      - image: cimg/android:2023.02-browsers
    environment:
      GRADLE_OPTS: -Xmx3900m -XX:MaxPermSize=4048m -XX:+HeapDumpOnOutOfMemoryError
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Bump Version
          command: |
            export BUILD_NUMBER=${CIRCLE_BUILD_NUM}
            cd scripts
            ./version-bumper.sh
      - run:
          name: Get JSON & GPG Keys From Env-Var
          command: |
            echo ${PLAYSTORE_SERVICE_KEY} > app/GPLAY_KEY.json
            echo -e $GPG_KEY > smart_receipts_key.asc
      - run:
          name: Import gpg key into gpg, decrypt secrets
          command: |
            gpg --import smart_receipts_key.asc
            gpg --decrypt secrets.tar.gpg > secrets.tar
            tar -vxf secrets.tar
            rm secrets.tar
      - run:
          name: Approve SDK Licenses
          # Captures SIGPIPE 141 error but still allow repeating "y" to accept all licenses
          command: yes | sdkmanager --licenses || if [ $? -ne '141' ]; then exit $?; fi;
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Assemble Free
          command: ./gradlew clean bundleFreeRelease
      - run:
          name: Run Tests Free
          command: ./gradlew test bundleFreeRelease
      - run:
          name: Publish Free Beta Version To Play Store
          command: |
            rm -fr ~/.gradle/daemon/
            ./gradlew publishFreeReleaseBundle
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
          # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  buildPlus:
    working_directory: ~/code
    docker:
      - image: cimg/android:2023.02-browsers
    environment:
      GRADLE_OPTS: -Xmx3900m -XX:MaxPermSize=4048m -XX:+HeapDumpOnOutOfMemoryError
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Bump Version
          command: |
            export BUILD_NUMBER=${CIRCLE_BUILD_NUM}
            cd scripts
            ./version-bumper.sh
      - run:
          name: Get JSON & GPG Keys From Env-Var
          command: |
            echo ${PLAYSTORE_SERVICE_KEY} > app/GPLAY_KEY.json
            echo -e $GPG_KEY > smart_receipts_key.asc
      - run:
          name: Import gpg key into gpg, decrypt secrets
          command: |
            gpg --import smart_receipts_key.asc
            gpg --decrypt secrets.tar.gpg > secrets.tar
            tar -vxf secrets.tar
            rm secrets.tar
      - run:
          name: Approve SDK Licenses
          # Captures SIGPIPE 141 error but still allow repeating "y" to accept all licenses
          command: yes | sdkmanager --licenses || if [ $? -ne '141' ]; then exit $?; fi;
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}e
      - run:
          name: Publish Plus Beta Version To Play Store
          command: |
            rm -fr ~/.gradle/daemon/
            ./gradlew publishPlusFlavorReleaseBundle
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
          # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  buildAndTestFreeAPK:
    working_directory: ~/code
    docker:
      - image: cimg/android:2023.02-browsers  # gcloud is baked into this image
    environment:
      GRADLE_OPTS: -Xmx3400m -XX:+HeapDumpOnOutOfMemoryError
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Get JSON & GPG Keys From Env-Var
          command: |
            echo ${PLAYSTORE_SERVICE_KEY} > app/GPLAY_KEY.json
            echo -e $GPG_KEY > smart_receipts_key.asc
      - run:
          name: Import gpg key into gpg, decrypt secrets to get test lab account key
          command: |
            gpg --import smart_receipts_key.asc
            gpg --decrypt secrets.tar.gpg > secrets.tar
            tar -vxf secrets.tar
            rm secrets.tar
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=test_lab_account_key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Build debug and test APKs for Free variant
          command: |
            rm -fr ~/.gradle/daemon/
            ./gradlew :app:assembleFreeDebug
            ./gradlew :app:assembleFreeDebugAndroidTest
      - run:
          name: Test Free Variant with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --app app/build/outputs/apk/free/debug/app-free-debug.apk \
              --test app/build/outputs/apk/androidTest/free/debug/app-free-debug-androidTest.apk \
              --device model=oriole,version=33 \
              --environment-variables clearPackageData=true,listener=co.smartreceipts.android.test.runner.CrashingRunListener \
              --use-orchestrator \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}-free
  buildAndTestPlusAPK:
    working_directory: ~/code
    docker:
      - image: cimg/android:2023.02-browsers  # gcloud is baked into this image
    environment:
      GRADLE_OPTS: -Xmx3200m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Get JSON & GPG Keys From Env-Var
          command: |
            echo ${PLAYSTORE_SERVICE_KEY} > app/GPLAY_KEY.json
            echo -e $GPG_KEY > smart_receipts_key.asc
      - run:
          name: Import gpg key into gpg, decrypt secrets to get test lab account key
          command: |
            gpg --import smart_receipts_key.asc
            gpg --decrypt secrets.tar.gpg > secrets.tar
            tar -vxf secrets.tar
            rm secrets.tar
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=test_lab_account_key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Build debug and test APKs for Plus variant
          command: |
            rm -fr ~/.gradle/daemon/
            ./gradlew :app:assemblePlusFlavorDebug
            ./gradlew :app:assemblePlusFlavorDebugAndroidTest
      - run:
          name: Test Plus Variant with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --app app/build/outputs/apk/plusFlavor/debug/app-plusFlavor-debug.apk \
              --test app/build/outputs/apk/androidTest/plusFlavor/debug/app-plusFlavor-debug-androidTest.apk \
              --device model=oriole,version=33 \
              --environment-variables clearPackageData=true,listener=co.smartreceipts.android.test.runner.CrashingRunListener \
              --use-orchestrator \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}-plus
workflows:
  version: 2
  build_and_test:
    jobs:
      - buildFree:
          filters:
            branches:
              only:
                - /release_.*/
      - buildPlus:
          filters:
            branches:
              only:
                - /release_.*/
      - buildAndTestFreeAPK:
          filters:
            branches:
              only:
                - master
                - /release_.*/
                - circle-ci-fix
      - buildAndTestPlusAPK:
          filters:
            branches:
              only:
                - master
                - /release_.*/
