apply plugin: 'com.android.application'
android {
    // correct propagation of build-type
    // https://code.google.com/p/android/issues/detail?id=52962#c129
    publishNonDefault true

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    productFlavors {
        free {
            applicationId "wb.receipts"
        }
        pro {
            applicationId "wb.receiptspro"
        }
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }

    sourceSets {
        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug {
            setRoot('build-types/debug')
        }
        release {
            setRoot('build-types/release')
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dependencies {
        compile fileTree(dir: 'libs', include: '*.jar')

        compile project(':wbMiniLibrary')

        compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
        compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
        compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
        compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
        compile "com.android.support:exifinterface:$SUPPORT_LIBRARY_VERSION"

        compile "com.google.android.gms:play-services-drive:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"

        compile "com.google.firebase:firebase-core:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
        compile "com.google.firebase:firebase-crash:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
        compile "com.google.firebase:firebase-messaging:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"

        compile "com.squareup.picasso:picasso:$PICASSO_VERSION"
        compile "com.squareup.okhttp3:okhttp:$OK_HTTP_VERSION"
        compile "com.squareup.okhttp3:logging-interceptor:$OK_HTTP_VERSION"
        compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
        compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
        compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
        compile "io.reactivex:rxjava:$RX_JAVA_VERSION"
        compile "io.reactivex:rxandroid:$RX_ANDROID_VERSION"
        compile "com.jakewharton.rxbinding:rxbinding:$RX_BINDING_VERSION"

        compile "commons-io:commons-io:$IO_UTILS_VERSION"

        compile "com.jpardogo.materialtabstrip:library:$MATERIAL_TAB_STRIP_VERSION"
        compile "com.github.clans:fab:$FAB_MENU_VERSION"

        compile "com.tom_roush:pdfbox-android:$PDFBOX_ANDROID_VERSION"

        compile "org.slf4j:slf4j-api:$SLF4J_VERSION"
        compile "com.github.tony19:logback-android-core:$LOGBACK_VERSION"
        compile("com.github.tony19:logback-android-classic:$LOGBACK_VERSION") {
            // workaround issue #73
            exclude group: 'com.google.android', module: 'android'
        }

        compile "com.andkulikov:transitionseverywhere:$TRANSITIONS_EVERYWHERE_VERSION"

        // Dagger
        compile "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
        compile "com.google.dagger:dagger:$DAGGER_VERSION"
        annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

        // Unit Tests
        testCompile "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
        testCompile "junit:junit:$JUNIT_VERSION"
        testCompile "org.mockito:mockito-all:$MOCKITO_VERSION"

        // Leak Canary
        debugCompile "com.squareup.leakcanary:leakcanary-android:$LEAK_CANARY_VERSION"
        releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAK_CANARY_VERSION"
        testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAK_CANARY_VERSION"

        // Special dependencies for free flavor
        freeCompile "com.google.android.gms:play-services-ads:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
        freeCompile "com.google.android.gms:play-services-analytics:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
    }

    apply plugin: 'com.google.gms.google-services'
}

dependencies {
    compile files('src/free/libs/bugsense-3.6.jar')
}