apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: 'io.fabric'


androidExtensions {
    experimental = true
}

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 480
        versionName "4.14.0.480"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    dexOptions {
        javaMaxHeapSize "2048M"
    }

    flavorDimensions "versionType"

    productFlavors {
        free {
            applicationId "wb.receipts"
            dimension "versionType"
        }
        plusFlavor {
            applicationId "wb.receiptspro"
            dimension "versionType"
        }
        fireDepartmentFlavor {
            applicationId "co.smartreceipts.fire.department.tracker.android"
            dimension "versionType"
        }
        basicReceiptsFlavor {
            // applicationId "com.basicreceipts.android"
            applicationId "wb.receiptspro"
            dimension "versionType"
        }
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/debug.keystore")
        }
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage', 'MissingTranslation'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        free.java.srcDirs += 'src/free/kotlin'
        plusFlavor.java.srcDirs += 'src/plusFlavor/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }


    dependencies {
        implementation fileTree(dir: 'libs', include: '*.jar')
        implementation project(':wbMiniLibrary')

        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        implementation "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
        implementation "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
        implementation "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
        implementation "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
        implementation "com.android.support:exifinterface:$SUPPORT_LIBRARY_VERSION"
        implementation "com.android.support:design:$SUPPORT_LIBRARY_VERSION"

        implementation "com.android.support:multidex:$MULTIDEX_VERSION"

		implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"

        implementation "com.google.android.gms:play-services-drive:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
        implementation "com.google.firebase:firebase-core:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
        implementation "com.google.firebase:firebase-crash:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
        implementation "com.google.firebase:firebase-messaging:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"

        implementation "com.squareup.picasso:picasso:$PICASSO_VERSION"
        implementation "com.squareup.okhttp3:okhttp:$OK_HTTP_VERSION"
        implementation "com.squareup.okhttp3:logging-interceptor:$OK_HTTP_VERSION"
        implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
        implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"

        //Rx2
        implementation "io.reactivex.rxjava2:rxjava:$RX2_JAVA_VERSION"
        implementation "io.reactivex.rxjava2:rxandroid:$RX2_ANDROID_VERSION"
        implementation "com.jakewharton.rxbinding2:rxbinding:$RX2_BINDING_VERSION"
        implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

        implementation "commons-io:commons-io:$IO_UTILS_VERSION"
        implementation "com.hadisatrio:Optional:$OPTIONAL_VERSION"

        implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
        annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

        implementation "com.tapadoo.android:alerter:$ALERTER_VERSION"
        implementation "com.github.clans:fab:$FAB_MENU_VERSION"

        implementation "com.tom_roush:pdfbox-android:$PDFBOX_ANDROID_VERSION"
        implementation "com.github.barteksc:pdfium-android:$PDFIUM_VERSION"

        implementation "org.slf4j:slf4j-api:$SLF4J_VERSION"
        implementation "com.github.tony19:logback-android-core:$LOGBACK_VERSION"
        implementation("com.github.tony19:logback-android-classic:$LOGBACK_VERSION") {
            // workaround issue #73
            exclude group: 'com.google.android', module: 'android'
        }

        // Note: Periodically check for updates here so we can revert to the official version
        // implementation "com.github.PhilJay:MPAndroidChart:$MP_ANDROID_CHART_VERSION"
        implementation "com.github.wbaumann:MPAndroidChart:$MP_ANDROID_CHART_FORK_WITH_FIXES_VERSION"

        implementation ("com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:$ADV_RECYCLER_VIEW_VERSION@aar"){
            transitive=true
        }

        implementation "com.amazonaws:aws-android-sdk-core:$AWS_SDK_VERSION"
        implementation "com.amazonaws:aws-android-sdk-s3:$AWS_SDK_VERSION"

        // Dagger
        implementation "com.google.dagger:dagger-android-support:$DAGGER_VERSION"
        implementation "com.google.dagger:dagger:$DAGGER_VERSION"
        annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
        annotationProcessor "com.google.dagger:dagger-android-processor:$DAGGER_VERSION"

        // Crashalytics
        implementation "com.crashlytics.sdk.android:crashlytics:$CRASHLYTICS_VERSION"

        // Unit Tests
        testImplementation "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
        testImplementation "junit:junit:$JUNIT_VERSION"
        testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
        testImplementation "com.nhaarman:mockito-kotlin:$MOCKITO_KOTLIN_VERSION"

        // Leak Canary
        debugImplementation "com.squareup.leakcanary:leakcanary-android:$LEAK_CANARY_VERSION"
        releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$LEAK_CANARY_VERSION"
        testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$LEAK_CANARY_VERSION"

        // Special dependencies for free flavor
        freeImplementation "com.google.android.gms:play-services-analytics:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"

        // Free ads
        freeImplementation "com.google.android.gms:play-services-ads:$FIREBASE_AND_GOOGLE_PLAY_SERVICES_VERSION"
        freeImplementation ("com.adincube.sdk:AdinCube-Java-1626ebe:$ADS_ADINCUBE_VERSION@aar") {
            transitive = true
        }
        freeImplementation "com.inmobi.monetization:inmobi-ads:$IN_MOBI_VERSION"
    }

    apply plugin: 'com.google.gms.google-services'
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}
